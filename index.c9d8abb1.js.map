{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAO,SAAS,aAAa,CAAC,SAEpC,SAAS,EAAmB,CAAS,CAAE,CAAO,EAC5C,IAAM,EAAM,SAAS,aAAa,CAAC,MAEnC,CAAA,EAAI,SAAS,CAAG,EAChB,EAAI,SAAS,CAAG,EAChB,EAAK,WAAW,CAAC,EACnB,CAEA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,EAAK,gBAAgB,CAAC,QAAS,WAC7B,GACF,EACF,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WAAM,OAAA,EAAO,AAAI,QAAU,EAAA,IACxC,GAEA,EACG,IAAI,CAAC,WACJ,EAAmB,UAAW,wBAChC,GACC,KAAK,CAAC,WACL,EAAmB,wBAAyB,wBAC9C,GAEF,EACG,IAAI,CAAC,WACJ,EAAmB,UAAW,wBAChC,GACC,KAAK,CAAC,WACL,EAAmB,wBAAyB,wBAC9C,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar body = document.querySelector(\"body\");\nvar logo = document.querySelector(\".logo\");\nfunction createNotification(className, message) {\n    var div = document.createElement(\"div\");\n    div.className = className;\n    div.innerText = message;\n    body.appendChild(div);\n}\nvar promise1 = new Promise(function(resolve, reject) {\n    logo.addEventListener(\"click\", function() {\n        resolve();\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        return reject(new Error());\n    }, 3000);\n});\npromise1.then(function() {\n    createNotification(\"message\", \"Promise was resolved!\");\n}).catch(function() {\n    createNotification(\"message error-message\", \"Promise was rejected!\");\n});\npromise2.then(function() {\n    createNotification(\"message\", \"Promise was resolved!\");\n}).catch(function() {\n    createNotification(\"message error-message\", \"Promise was rejected!\");\n});\n\n//# sourceMappingURL=index.c9d8abb1.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\nconst logo = document.querySelector('.logo');\n\nfunction createNotification(className, message) {\n  const div = document.createElement('div');\n\n  div.className = className;\n  div.innerText = message;\n  body.appendChild(div);\n}\n\nconst promise1 = new Promise((resolve, reject) => {\n  logo.addEventListener('click', () => {\n    resolve();\n  });\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => reject(new Error()), 3000);\n});\n\npromise1\n  .then(() => {\n    createNotification('message', 'Promise was resolved!');\n  })\n  .catch(() => {\n    createNotification('message error-message', 'Promise was rejected!');\n  });\n\npromise2\n  .then(() => {\n    createNotification('message', 'Promise was resolved!');\n  })\n  .catch(() => {\n    createNotification('message error-message', 'Promise was rejected!');\n  });\n"],"names":["body","document","querySelector","logo","createNotification","className","message","div","createElement","innerText","appendChild","promise1","Promise","resolve","reject","addEventListener","promise2","setTimeout","Error","then","catch"],"version":3,"file":"index.c9d8abb1.js.map"}